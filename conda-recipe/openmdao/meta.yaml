package:
  name: openmdao     # lower case name of package, may contain '-' but no spaces
  version: 0.9.5     # version of package. Should use the PEP-386 verlib conventions.

source:
# The source section specifies where the source code of the package is coming
# from, it may be coming from a source tarball like:
#  fn: qt-everywhere-opensource-src-4.8.4.tar.gz
#  url: http://filer/src/qt-everywhere-opensource-src-4.8.4.tar.gz
#  md5: 89c5ecba180cae74c66260ac732dc5cb              # (optional)
# or from git:
  git_url: https://github.com/OpenMDAO/OpenMDAO-Framework.git
  git_tag: 0.9.5    # (optional)
# also optionally patches may be applied to the source
#  patches:
#    - my.patch    # the patch file is expected to be found in the recipe

# Note, the source section is optional. If you want to specify a source
# location locally, the easiest way is to not specify the source here, but
# to just add something like
#
# cp -r $RECIPE_DIR/../src .
# cd src
# ...
#
# in build.sh (and similarly in bld.bat). This assumes the source is
# shipped alongside the recipe in src.

# The build number should be incremented for new builds of the same version
#build:            # (optional)
#  number: 1       # (optional, defaults to 0)
#  string: abc     # (optional, defaults to default conda build string plus the build number)

# optional Python entry points
#  entry_points:
#    - bsdiff4 = bsdiff4.cli:main_bsdiff4
#    - bspatch4 = bsdiff4.cli:main_bspatch4

# the build and runtime requirements:
requirements:     # (optional)
  build:
    - python
    - setuptools
    - numpy
    - traits 4.3.0
    - pyparsing
    - pycrypto
    - sympy
    - zope.interface
    - decorator
    - networkx
    - sphinx
  run:
    - python
    - setuptools
    - numpy
    - scipy

test:             # (optional)
 # files which are copied from the recipe into the (temporary) test
 # directory which are needed during testing
#  files:
#    - test-data.txt
# in addition to the run-time requirements, we can specify requirements
# needed during testing
#  requires:
#    - nose
# commands we want to make sure they work, which are expected to get
# installed by the package
  commands:
    - openmdao -h
    - plugin -h

# Python imports
  imports:
    - openmdao.main.api
    - openmdao.util.fileutil
    - openmdao.lib.components.api
# The script run_test.py will be run automatically if it is part of the
# recipe

about:            # (optional)
  home: http://openmdao.org
  license: Apache 2.0

